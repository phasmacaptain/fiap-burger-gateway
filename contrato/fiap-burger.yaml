openapi: 3.0.0
info:
  title: FiapBurger API Gateway
  description: API Gateway para o FiapBurger
  version: 1.0.0
servers:
  - url: /
    description: Servidor de produção

paths:
  /cliente:
    post:
      summary: Cria um novo cliente
      operationId: salvarCliente
      requestBody:
        description: Dados do novo cliente
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '201':
          description: Cliente criado com sucesso
          headers:
            Location:
              description: URL do novo cliente criado
              schema:
                type: string
        '400':
          description: Requisição inválida

    patch:
      summary: Edita um cliente existente
      operationId: editarCliente
      requestBody:
        description: Dados do cliente a ser editado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '200':
          description: Cliente atualizado com sucesso
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Requisição inválida
        '404':
          description: Cliente não encontrado
  /cliente/{cpf}:
    get:
      summary: Busca um cliente pelo CPF
      operationId: buscarCliente
      parameters:
        - name: cpf
          in: path
          required: true
          description: CPF do cliente a ser buscado
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteResponse'
        '404':
          description: Cliente não encontrado

    delete:
      summary: Deleta um cliente pelo CPF
      operationId: deletarCliente
      parameters:
        - name: cpf
          in: path
          required: true
          description: CPF do cliente a ser deletado
          schema:
            type: string
      responses:
        '204':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado

  /pedido:
    post:
      summary: Cria um novo pedido
      operationId: criarPedido
      requestBody:
        description: Dados do novo pedido
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriarPedidoRequest'
      responses:
        '200':
          description: Pedido criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoResponse'
        '400':
          description: Requisição inválida

    delete:
      summary: Deleta um pedido
      operationId: deletarPedido
      requestBody:
        description: Dados do pedido a ser deletado
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletarPedidoRequest'
      responses:
        '200':
          description: Pedido deletado com sucesso
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Requisição inválida

    get:
      summary: Lista todos os pedidos
      operationId: listaPedidos
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoResponse'

  /pedido/{id}:
    get:
      summary: Busca um pedido pelo ID
      operationId: buscarPedido
      parameters:
        - name: id
          in: path
          required: true
          description: ID do pedido a ser buscado
          schema:
            type: string
      responses:
        '200':
          description: Pedido encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoResponse'
        '404':
          description: Pedido não encontrado

  /pedido/avaliar:
    post:
      summary: Avalia um pedido
      operationId: avaliarPedido
      requestBody:
        description: Dados da avaliação do pedido
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvaliarPedidoRequest'
      responses:
        '200':
          description: Pedido avaliado com sucesso
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Requisição inválida

  /pedido/listar/{id_status}:
    get:
      summary: Lista pedidos por status
      operationId: listaPedidosPorStatus
      parameters:
        - name: id_status
          in: path
          required: true
          description: ID do status dos pedidos a serem listados
          schema:
            type: string
      responses:
        '200':
          description: Lista de pedidos por status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoResponse'

  /pedido/atualizar-status:
    patch:
      summary: Atualiza o status de um pedido
      operationId: atualizarStatusPedido
      requestBody:
        description: Dados para atualizar o status do pedido
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtualizarStatusPedidoRequest'
      responses:
        '200':
          description: Status do pedido atualizado com sucesso
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Requisição inválida

  /pedido/efetuar-pagamento:
    post:
      summary: Efetua o pagamento de um pedido
      operationId: efetuarPagamento
      requestBody:
        description: Dados do pagamento
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EfetuarPagamentoRequest'
      responses:
        '200':
          description: Pagamento efetuado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EfetuarPagamentoResponse'
        '400':
          description: Requisição inválida

  /produtos:
    get:
      summary: Lista todos os produtos
      operationId: listProdutos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produto'
      security:
        - apiKey: []
    post:
      summary: Cria um novo produto
      operationId: createProduto
      requestBody:
        description: Dados do novo produto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
      security:
        - apiKey: []

  # /categorias:
  #   get:
  #     summary: Lista todas as categorias
  #     operationId: listCategorias
  #     responses:
  #       '200':
  #         description: Lista de categorias
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Categoria'
  #     security:
  #       - apiKey: []
  #   post:
  #     summary: Cria uma nova categoria
  #     operationId: createCategoria
  #     requestBody:
  #       description: Dados da nova categoria
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Categoria'
  #     responses:
  #       '201':
  #         description: Categoria criada com sucesso
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Categoria'
  #     security:
  #       - apiKey: []

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY

  schemas:
    Cliente:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do cliente
        nome:
          type: string
          description: Nome do cliente
        email:
          type: string
          description: E-mail do cliente
      required:
        - cpf
        - nome
        - email

    Pedido:
      type: object
      properties:
        id:
          type: string
          description: ID do pedido
        data_hora_inicio:
          type: string
          format: date-time
          description: Data e hora de início do pedido
        cpf_cliente:
          type: string
          description: CPF do cliente
        id_pagamento:
          type: string
          description: ID do pagamento
        id_satisfacao:
          type: string
          description: ID da satisfação
      required:
        - id
        - data_hora_inicio
        - cpf_cliente
        - id_pagamento

    Produto:
      type: object
      properties:
        id:
          type: string
          description: ID do produto
        nome:
          type: string
          description: Nome do produto
        descricao:
          type: string
          description: Descrição do produto
        preco:
          type: number
          format: float
          description: Preço do produto
        id_categoria:
          type: string
          description: ID da categoria
      required:
        - id
        - nome
        - descricao
        - preco
        - id_categoria

    Categoria:
      type: object
      properties:
        id:
          type: string
          description: ID da categoria
        nome:
          type: string
          description: Nome da categoria
      required:
        - id
        - nome

    ClienteRequest:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do cliente
          example: "12345678900"
        email:
          type: string
          description: Email do cliente
          example: "cliente@fiap.com"
        nome:
          type: string
          description: Nome do cliente
          example: "João Silva"
      required:
        - cpf
        - email
        - nome

    ClienteResponse:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do cliente
          example: "12345678900"
        email:
          type: string
          description: Email do cliente
          example: "cliente@fiap.com"
        nome:
          type: string
          description: Nome do cliente
          example: "João Silva"
    CriarPedidoRequest:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do cliente
          example: "12345678900"
        itensPedido:
          type: array
          description: Lista de itens do pedido
          items:
            $ref: '#/components/schemas/ItensPedido'
      required:
        - cpf

    DeletarPedidoRequest:
      type: object
      properties:
        idPedido:
          type: string
          description: ID do pedido
          example: "54321"
      required:
        - idPedido

    AvaliarPedidoRequest:
      type: object
      properties:
        idPedido:
          type: string
          description: ID do pedido
          example: "54321"
        idSatisfacao:
          type: string
          description: ID da satisfação
          example: "98765"
      required:
        - idPedido
        - idSatisfacao

    AtualizarStatusPedidoRequest:
      type: object
      properties:
        idPedido:
          type: string
          description: ID do pedido
          example: "54321"
        idStatus:
          type: string
          description: Novo status do pedido
          example: "Entregue"
      required:
        - idPedido
        - idStatus

    EfetuarPagamentoRequest:
      type: object
      properties:
        idPedido:
          type: string
          description: ID do pedido
          example: "54321"
        idPagamento:
          type: string
          description: ID do pagamento
          example: "12345"
        valorTotal:
          type: string
          description: Valor total do pagamento
          example: "150.50"
      required:
        - idPedido
        - idPagamento
        - valorTotal

    PedidoResponse:
      type: object
      properties:
        pedidoId:
          type: string
          description: ID do pedido
          example: "54321"
        cpf:
          type: string
          description: CPF do cliente
          example: "12345678900"
        itensPedido:
          type: array
          description: Lista de itens do pedido
          items:
            $ref: '#/components/schemas/ItensPedido'
        status:
          type: string
          description: Status do pedido
          example: "Entregue"

    EfetuarPagamentoResponse:
      type: object
      properties:
        pedidoId:
          type: string
          description: ID do pedido
          example: "54321"
        statusPagamento:
          type: string
          description: Status do pagamento
          example: "Pago"

    ItensPedido:
      type: object
      properties:
        produtoId:
          type: string
          description: ID do produto
          example: "98765"
        quantidade:
          type: integer
          description: Quantidade do produto
          example: 2
        precoUnitario:
          type: number
          format: float
          description: Preço unitário do produto
          example: 15.50
      required:
        - produtoId
        - quantidade
        - precoUnitario