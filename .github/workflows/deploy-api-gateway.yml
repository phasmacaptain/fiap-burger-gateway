name: Deploy API Gateway

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main
      - feature/**

jobs:
  validate-openapi:
    name: Validate OpenAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Install OpenAPI validator
        run: npm install -g @apidevtools/swagger-cli
      
      - name: Validate OpenAPI file
        run: swagger-cli validate contrato/fiap-burger.yaml

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: validate-openapi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  update-api-gateway:
    name: Update API Gateway
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update API Gateway
        run: |
          aws apigateway put-rest-api --rest-api-id $(terraform output -raw rest_api_id) --mode merge --body 'file://api-gateway/openapi.yaml'
        working-directory: api-gateway
